@model GivingActually_May.Models.CampaignMainViewModel
@{
    ViewBag.Title = Model.CreatedBy + "'s Campaign";
}
@Scripts.Render("~/bundles/jquery")
<script src="~/Scripts/toastr.js"></script>
<link href="~/Content/toastr.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/lazy.js"></script>

<head>
    <title>Need Your Help for the campaign - GivingActually</title>
    <!-- You can use Open Graph tags to customize link previews.
    Learn more: https://developers.facebook.com/docs/sharing/webmasters -->
    <meta property="og:url" content=encodeURIComponent(window.location.href) />
    <meta property="og:type" content="website" />

    @if (Model.CampainOrganizer != null)
    {
        if (Model.CampainOrganizer.BDisplayPic != null)
        {
            var getImage = System.Convert.ToBase64String(Model.CampainOrganizer.BDisplayPic);
            var Picture = string.Format("data:image/JPG;base64 , {0}", getImage);

            <meta property="og:image" content="@Url.Content(Picture)">
        }
    }
    <meta property="og:image:width" content="850">
    <meta property="og:image:height" content="450">
    <meta property="og:image:type" content="image/jpg" />


</head>
<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                @Model.CampaignTitle
                @*<small>Help @Model.BName by Donating Few!.</small>*@
            </h1>

            <meta property="og:title" content=@Model.CampaignTitle />
        </div>
    </div>

    <div class="row">
        <div class="col-lg-7 wellview">
            <div class="row" style="padding-bottom:0.5em;">
                <div class="col-md-12 col-sm-12">
                    <div class="col-md-6 col-sm-6">
                        <p style="text-align:left">
                            <i class="glyphicon glyphicon-user glyphicon-icon"></i> Campaigned by @Model.CreatedBy
                        </p>
                        @*<p style="text-align:left">
                                <i class="glyphicon glyphicon-calendar"></i> on  @Model.CreatedOn
                            </p>*@

                    </div>
                    <div class="col-md-6 col-sm-6 ">
                        <p style="text-align:right"> <i class="glyphicon glyphicon-tag glyphicon-icon"></i>  @Model.StoryCategory </p>
                        @*@{
                                Html.RenderPartial("_ReviewedBy", Model);
                            }*@
                    </div>
                </div>
            </div>
            @if (Model.Files.Any())
            {
                <div data-toggle="modal" data-target="#exampleModal">
                    @if (Model.Files.Count() == 1)
                    {
                        <div class="w3-row">
                            @{
                                Html.RenderPartial("_ImageView", Model.Files.First());
                            }
                        </div>
                    }
                    else if (Model.Files.Count() == 2)
                    {
                        <div class="w3-row">
                            @foreach (var fitem1 in Model.Files)
                            {
                                <div class="w3-half">
                                    @{
                                        Html.RenderPartial("_ImageView", fitem1);
                                    }
                                </div>
                            }

                        </div>
                    }
                    else if (Model.Files.Count() == 3)
                    {
                        <div class="w3-row">
                            @foreach (var fitem1 in Model.Files)
                            {
                                if (fitem1.Index == 0)
                                {
                                    <div class="w3-twothird class=" img_camViewdetail"">
                                        @{
                                            Html.RenderPartial("_ImageView", fitem1);
                                        }
                                    </div>
                                    break;
                                }
                            }
                            <div class="w3-quarter class=" img_camViewdetail"">
                                @foreach (var fitem1 in Model.Files)
                                {
                                    if (fitem1.Index != 0)
                                    {

                                        {
                                            Html.RenderPartial("_ImageView2", fitem1);
                                        }

                                    }

                                }
                            </div>

                        </div>
                    }
                    else
                    {
                        <div class="w3-row">
                            @foreach (var fitem1 in Model.Files)
                            {
                                if (fitem1.Index == 0)
                                {
                                    <div class="w3-twothird class=" img_camViewdetail"">
                                        @{
                                            Html.RenderPartial("_ImageView", fitem1);
                                        }
                                    </div>
                                    break;
                                }
                            }
                            <div class="w3-quarter class=" img_camViewdetail"">
                                @foreach (var fitem1 in Model.Files)
                                {


                                    if (fitem1.Index != 0)
                                    {

                                        {
                                            if (fitem1.Index == 2) { fitem1.Index = 3; fitem1.AttId = Model.Files.Count; }
                                            Html.RenderPartial("_ImageView2", fitem1);
                                        }

                                    }
                                    if (fitem1.Index == 3)
                                    {

                                        break;
                                    }
                                }
                            </div>
                        </div>

                    }
                </div>
                <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">×</span>
                                </button>
                            </div>
                            <div class="modal-body">

                                <div id="myCarousel" class="carousel slide" data-ride="carousel">
                                    <!-- Indicators -->
                                    <ol class="carousel-indicators">
                                        @if (Model.Files.Any())
                                        {
                                            int i = 0;
                                            foreach (var fitem1 in Model.Files)
                                            {

                                                <li data-target="#myCarousel" data-slide-to="@i"></li>

                                                i = i + 1;
                                            }
                                        }
                                    </ol>

                                    <!-- Wrapper for slides -->
                                    <div class="carousel-inner">
                                        @if (Model.Files.Any())
                                        {
                                            int i = 0;
                                            foreach (var fitem in Model.Files)
                                            {
                                                if (i == 0)
                                                {
                                                    <div class="item active">
                                                        @{
                                                            var getImage2 = System.Convert.ToBase64String(fitem.File);
                                                            var Picture2 = string.Format("data:image/JPG;base64 , {0}", getImage2);
                                                            <img src="~/Images/placeholder.png" data-src="@Url.Content(Picture2)" alt="@fitem.FileName" class="img_camViewdetail lazy">
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="item">
                                                        @{
                                                            var getImage1 = System.Convert.ToBase64String(fitem.File);
                                                            var Picture1 = string.Format("data:image/JPG;base64 , {0}", getImage1);
                                                            if (fitem.ContentType == "video/mp4")
                                                            {

                                                                <video class="img_camViewdetail" controls preload="none">
                                                                    <source src="@Url.Content(Picture1)" type="video/mp4">
                                                                    Your browser does not support the video tag.
                                                                </video>
                                                            }
                                                            else
                                                            {

                                                                <img src="~/Images/placeholder.png" data-src="@Url.Content(Picture1)" alt="@fitem.FileName" class="img_camViewdetail lazy" />
                                                            }
                                                        }
                                                    </div>
                                                }
                                                i = i + 1;
                                            }
                                        }
                                    </div>

                                    <!-- Left and right controls -->
                                    <a class="left carousel-control" href="#myCarousel" data-slide="prev">
                                        <span class="glyphicon glyphicon-chevron-left"></span>
                                        <span class="sr-only">Previous</span>
                                    </a>
                                    <a class="right carousel-control" href="#myCarousel" data-slide="next">
                                        <span class="glyphicon glyphicon-chevron-right"></span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </div>
                                <hr />

                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <hr>
            @if (Model.loggedinUser)
            {
                <div class="col-md-12" style="padding-top:2em; padding-bottom:2em;">
                    <div class="col-md-4">
                        <a href='/User/AddNewCampaign/?Id=@Model.Id'> <span class="glyphicon glyphicon-edit"></span> Edit Campaign</a>
                    </div>
                    <div class="col-md-4">
                        <a href='/User/PostUpdate/?Id=@Model.Id'> <span class="glyphicon glyphicon-heart"></span> Post Update</a>
                        @* <a href='/User/Index/'> <span class="glyphicon glyphicon-heart"></span> Post Update</a>*@
                    </div>
                    <div class="col-md-4">
                        @*<a href='/User/Withdraw/?Id=@Model.Id'> <span class="glyphicon glyphicon-piggy-bank"></span> WithDraw </a>*@
                        <a href='/User/Index'> <span class="glyphicon glyphicon-barcode"></span> WithDraw </a>
                    </div>
                </div>
            }
            <div class=" row">
                <div class=" col-md-12 col-sm-12">
                    <p class="lead cam-lead ">Campaign Detail:</p>
                </div>
                @*<div class=" col-md-6 col-sm-6 ">
                        <div class="pull-right" style="font-style:italic">
                            <p><i class="glyphicon glyphicon-flag" style="color:lightseagreen"></i> Endorsed By 2 NGOs</p>
                            <ul>
                                <li>Indian wellness Academy</li>
                                <li>Index Education NGO</li>
                            </ul>
                        </div>
                    </div>*@
            </div>
            <div class="container-sm cam-view-desc" style="">
                <p style="width:100%;"> @Html.Raw(String.Format("{0}", Model.campaignDescription != null ? (Model.campaignDescription.StoryDescription != null ? Model.campaignDescription.StoryDescription : "") : ""))</p>
                <meta property="og:description" content=@(String.Format("{0}{1}", Model.campaignDescription != null ? (Model.campaignDescription.StoryDescription != null ? Model.campaignDescription.StripedDescription.Substring(0, Model.campaignDescription.StripedDescription.Length > 75 ? 75 : Model.campaignDescription.StripedDescription.Length) : "") : "", ".....")) />
            </div>
            <hr />
            <div class="header" id="myHeader">
                <div class="row">
                    <div class=" col-md-6 text-center">
                        <a href='/User/DonateCampaign/?Id=@Model.Id' class=" btn btn-success  text-center">Donate Now</a>
                    </div>
                    <div class=" col-md-6 text-center">
                        <a data-toggle="modal" data-target="#shareModal" class="btn btn-default  text-center">Share</a>

                    </div>
                </div>

            </div>
            <hr />
            <p class="lead">Campaign Updates:</p>
            <div class="">

                @if (Model.Updates.Any())
                {
                    int j = 0;
                    <ul>
                        @foreach (var updt in Model.Updates)
                        {
                            j = j + 1;
                            <li class="pull-left active">

                                <span class="pull-left">
                                    <span class="date">On @updt.updatedOn.ToShortDateString()</span>
                                    <span class=" text-muted sub-text">@Model.CreatedBy , Organizer</span>

                                </span>
                                <div class="row pull-left " style="padding-bottom:0.5em">
                                    <div class="container-sm " style="word-wrap: break-word;">
                                        <p style="width:100%;"> @Html.Raw(String.Format("{0}", updt.UpdateDescription != null ? (updt.UpdateDescription.StoryDescription != null ? updt.UpdateDescription.StoryDescription : "") : ""))</p>
                                    </div>
                                    @if (updt.Files.Any())
                                    {
                                        <div class="w3-row">
                                            @foreach (var fitem1 in updt.Files)
                                            {
                                                <div class="w3-half">
                                                    @{
                                                        Html.RenderPartial("_ImageViewMain", fitem1);
                                                    }
                                                </div>
                                            }

                                        </div>
                                    }
                                    <hr />
                                </div>

                            </li>

                        }
                    </ul>
                }
            </div>
            <!-- the comment box -->

        </div>
        <div class="col-lg-5  ">
            <div class="header" id="myHeader">
                <div class="wellview">
                    <div class="text-center prog_div">
                        <div class="row">
                            <div class=" col-md-6 text-left">
                                <span class="prog_desc">Raised: &nbsp;&nbsp; <bold>@Model.CurrencyCode <span style="font-weight:bolder">@Model.RaisedAmount</span> </bold> </span>
                            </div>
                            <div class=" col-md-6 text-right">
                                <span class="prog_desc">Goal: &nbsp;&nbsp; <bold>@Model.CurrencyCode <span style="font-weight:bolder">@Math.Round(Model.CampaignTargetMoney)</span> </bold></span>
                            </div>
                        </div>
                        <div class="progress prog_main">
                            <div class="progress-bar progress-bar-striped bg-success active" role="progressbar" style="width: @Model.RaisedPercentage%; background-color:#18bc9c" aria-valuenow=@Model.RaisedPercentage aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    </div>
                    <hr />


                    <div class="row vdivide text-center" style="padding-left:5%">
                        <div class="col-lg-2 col-md-2  col-sm-2 text-center" style="width:20%">
                            <div id="CommentscountPartialViewDiv">
                                @{
                                    Html.RenderPartial("_commentcount", Model);
                                }
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-2 text-center" style="width:20%">
                            <div id="LikesPartialViewDiv">
                                @{
                                    Html.RenderPartial("_Like", Model);
                                }
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-2 text-center" style="width:16%">
                            <div id="DonorsPartialViewDiv">
                                @{
                                    Html.RenderPartial("_Donors", Model);
                                }
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-2 text-center" style="width:15%">
                            <div id="SharesPartialViewDiv">
                                @{
                                    Html.RenderPartial("_Shares", Model);
                                }
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-2 col-sm-2 text-center" style="width:18%">
                            <div id="endorsedPartialViewDiv">
                                @{
                                    Html.RenderPartial("_ReviewedBy", Model);
                                }
                            </div>
                        </div>
                    </div>
                    <hr>
                    <div class="row text-center">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-offset-1 col-md-5 text-center">

                                    <a href='/User/DonateCampaign/?Id=@Model.Id' class="btn btn-success btn-lg text-center" style="height:80px; padding-top:1.5em;"> <span class="glyphicon glyphicon-gift "></span> <b>Donate Now</b></a>


                                </div>
                                <div class="col-md-6" style="padding-top:1em;">
                                    @if (Model.isLiked)
                                    {

                                        <button type="button" class="btn btn-default btn-sm  text-center" title="You are already supporting this Camapign!">
                                            <span class="glyphicon glyphicon-thumbs-up"></span> Support
                                        </button>

                                    }
                                    else
                                    {

                                        <button type="button" class="btn btn-default  btn-sm text-center" onclick="btnlike_clicked()" title="Click to Support this Camapign!">
                                            <span class="glyphicon glyphicon-thumbs-up"></span> Support
                                        </button>

                                    }


                                    <button type="button" class="btn btn-default btn-sm text-center" data-toggle="modal" data-target="#shareModal">
                                        <span class="glyphicon glyphicon-share"></span> Share
                                    </button>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div style="padding-left:1em;">
                        <div class="row " style="padding:1em;">
                            <div class="col-md-12  col-sm-12">
                                <div class="comment-wrapper">
                                    <div class="panel panel-success">
                                        <div class="panel-heading">
                                            Comments
                                        </div>
                                        <div class="panel-body">
                                            <textarea class="form-control" id="CommentText" placeholder="write a comment..." rows="1"></textarea>
                                            @Html.HiddenFor(m => m.Id)
                                            <br>
                                            <button type="button" class="btn btn-default  btn-sm text-center pull-right" onclick="btnpost_clicked()">Post</button>
                                            <div class="clearfix"></div>
                                            <hr>
                                            <div id="CommentsPartialViewDiv">
                                                @{
                                                    Html.RenderPartial("_miniComments", Model);
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>


                    <!-- /input-group -->
                </div>

                <!-- /well -->
                <!-- /well -->

                <div class="wellview">
                    <div id="CommentsPartialViewDiv" style="padding-left:1em;">
                        @{
                            Html.RenderPartial("_miniDonorsList", Model);
                        }
                    </div>
                </div>

                <!-- /well -->
            </div>
        </div>
    </div>
    <div id="shareModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title panel-heading">Comments</h4>
                </div>
                <div class="modal-body">
                    <div class="panel-body">
                        <p>
                            Help by sharing
                            Campaigns shared on social networks raise up to 5x more
                        </p>
                        <div id="CommentsPartialViewDiv" style="padding-left:1em;">
                            @{
                                Html.RenderPartial("_share", Model);
                            }
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        toastr.options = {

            tapToDismiss: true,

            // toast class
            toastClass: 'toast',

            // container ID
            containerId: 'toast-container',

            // debug mode
            debug: false,

            // fadeIn, slideDown, and show are built into jQuery
            showMethod: 'fadeIn',

            // duration of animation
            showDuration: 300,

            // easing function
            showEasing: 'swing',

            // callback function
            onShown: undefined,
            onHidden: undefined,

            // hide animation
            hideMethod: 'fadeOut',

            // duration of animation
            hideDuration: 1000,

            // easing function
            hideEasing: 'swing',

            // close animation
            closeMethod: false,

            // duration of animation
            closeDuration: false,

            // easing function
            closeEasing: false,

            // timeout in ms
            extendedTimeOut: 1000,

            // you can customize icons here
            iconClasses: {
                error: 'toast-error',
                info: 'toast-info',
                success: 'toast-success',
                warning: 'toast-warning'
            },
            iconClass: 'toast-info',

            // toast-top-center, toast-bottom-center, toast-top-full-width
            // toast-bottom-full-width, toast-top-left, toast-bottom-right
            // toast-bottom-left, toast-top-right
            positionClass: 'toast-top-right',

            // set timeOut and extendedTimeOut to 0 to make it sticky
            timeOut: 5000,

            // title class
            titleClass: 'toast-title',

            // message class
            messageClass: 'toast-message',

            // allows HTML content in the toast?
            escapeHtml: false,

            // target container
            target: 'body',

            // close button
            closeHtml: '<button type="button">&times;</button>',

            // place the newest toast on the top
            newestOnTop: true,

            // revent duplicate toasts
            preventDuplicates: false,

            // shows progress bar
            progressBar: false

        };

        //$('#toastr-success').click(function () {
        //    toastr.success('This is a success notification from toastr.')
        //});

        //$('#toastr-info').click(function () {
        //    toastr.info('This is an information notification provided by toastr.')
        //});

        //$('#toastr-warning').click(function () {
        //    toastr.warning('This is a warning notification provided by toastr.')
        //});

        //$('#toastr-error').click(function () {
        //    toastr.error('This is an error notification provided by toastr.')
        //});
    });

    function btnpost_clicked() {

        var CommentText = $('#CommentText').val();
        var Id = $('#Id').val();
        if (CommentText != "") {
            $.ajax({
                type: 'POST',
                url: "/User/AddComments",
                data: { 'Id': Id, 'comments': CommentText },
                cache: false,
                success: function (response) {
                    $("#CommentsPartialViewDiv").html(response);
                    $("#CommentText").val("");
                    $.ajax({
                        type: 'POST',
                        url: "/User/AddCommentcount",
                        data: { 'Id': Id, 'comments': CommentText },
                        cache: false,
                        success: function (responseval) {
                            $("#CommentscountPartialViewDiv").html(responseval)
                        }
                    });
                }
            });
        }
        else {
            toastr.error('Please Type Your Comment.')
        }
    }

    function btnlike_clicked() {

        var Id = $('#Id').val();

        $.ajax({
            type: 'POST',
            url: "/User/ToggleLike",
            data: { 'Id': Id },
            cache: false,
            success: function (response) {
                $("#LikesPartialViewDiv").html(response);
            }
        });
    }
    function fbshareCurrentPage() {

        window.open("https://www.facebook.com/sharer/sharer.php?u=" + encodeURIComponent(window.location.href) + "&t=" + document.title, '',
            'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=300,width=600');
        return false;
    }


    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v3.0";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));




    window.onscroll = function () { myFunction() };

    var header = document.getElementById("myHeader");
    var sticky = header.offsetTop;

    function myFunction() {
        if (window.pageYOffset > sticky) {
            header.classList.add("sticky");
        } else {
            header.classList.remove("sticky");
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        let lazyImages = [].slice.call(document.querySelectorAll("img.lazy"));
        let active = false;

        const lazyLoad = function () {
            if (active === false) {
                active = true;

                setTimeout(function () {
                    lazyImages.forEach(function (lazyImage) {
                        if ((lazyImage.getBoundingClientRect().top <= window.innerHeight && lazyImage.getBoundingClientRect().bottom >= 0) && getComputedStyle(lazyImage).display !== "none") {
                            lazyImage.src = lazyImage.dataset.src;
                            lazyImage.classList.remove("lazy");

                            lazyImages = lazyImages.filter(function (image) {
                                return image !== lazyImage;
                            });

                            if (lazyImages.length === 0) {
                                document.removeEventListener("scroll", lazyLoad);
                                window.removeEventListener("resize", lazyLoad);
                                document.removeEventListener("mousemove", lazyLoad);
                                window.removeEventListener("orientationchange", lazyLoad);
                            }
                        }
                    });

                    active = false;
                }, 200);
            }
        };

        document.addEventListener("scroll", lazyLoad);
        window.addEventListener("resize", lazyLoad);
        document.addEventListener("mousemove", lazyLoad);
        window.addEventListener("orientationchange", lazyLoad);
    });
</script>

