@model GivingActually_May.Models.CampaignMainViewModel

@{
    ViewBag.Title = "Add Campaign Description";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    body {
        color: #fff;
        background: #9e9e9e;
        font-family: 'Open Sans', sans-serif;
    }
</style>

<h4 class=" text-center">Add New Campaign</h4>


<body>
    <ul id="progressbar">
        <li class="active" id="account"><strong>Campaign Details</strong></li>
        <li class="active" id="personal"><strong>Campaign Display</strong></li>
        <li class="active" id="confirm"><strong>Campaign Story</strong></li>


    </ul>


    <div class="user-form">
        @using (Html.BeginForm("AddCampaignDescription", "User", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
        {
            <h2>
                About your Campaign
                <small>Fill to let people know more about your fundraising Campaign</small>
            </h2>

            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.UserId)
            <input type="hidden" name="Id" id="Id" value="@Model.Id" />
            @Html.HiddenFor(m => m.campaignDescription.Id)


            <div cclass="form-group">
                <script src="~/Themes/ckeditor.js"></script>
                <div class="row">
                    @Html.LabelFor(model => model.campaignDescription.StoryDescription, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.campaignDescription.StoryDescription, new { @id = "FullDescription", @class = "form-control", @cols = 100, @rows = 10, @minlength = "50", @style = "height: 360px;" })
                        <script>

                            CKEDITOR.replace('FullDescription', {
                                extraPlugins: 'wordcount', wordcount: {
                                    showParagraphs: false,
                                    showWordCount: false,
                                    showCharCount: true,
                                    countSpacesAsChars: true,
                                    countHTML: true,
                                    maxWordCount: -1,
                                    maxCharCount: 2000,
                                    minCharCount:50
                                }}
                            );
                        </script>
                        @Html.ValidationMessageFor(model => model.campaignDescription.StoryDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="form-group" style="padding-top:2em;">
                <div class="row">
                    @Html.Label("Attachement(Image/Video)", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <input type="file" name="file" multiple="multiple" />
                        @*<input type="file" class="form-control" name="file2" id="File2" style="width: 100%;" accept=".png,.jpg,.jpeg,.gif,.tif" filesize="10" /> <br />*@
                    </div>
                </div>
            </div>

            <div class="col-md-12">
                <div id="filesListPartialViewDiv">
                    @{
                        Html.RenderPartial("_fileAttachement", Model);
                    }
                </div>
            </div>
            



            <div class="form-group text-center">
                <input type="submit" value=@(Model.campaignDescription.Id == 0 ? "Save And Submit" : "Update") class="btn btn-success btn-lg btn-outline-danger" />


            </div>
            <div class="form-group text-center">
                @if (Model.Id > 0)
                {
                    <a class="action-button-previous" href='/User/AddBeneficiary/?Id=@Model.Id'>Back</a>
                }
            </div>
        }

    </div>
</body>


<script type="text/javascript">

    $(document).ready(function () {
        $("input[type='file']").on("change", function () {
            if (this.files[0].size > 2000000) {
                alert("Please upload file less than 2MB. Thanks!!");
                $(this).val('');
            }
        });

    });
    $('#addprofile').click(function () {

        var formData = new FormData();
        var files = $("#ImgUpload").get(0).files;// encodeURIComponent(document.getElementById("base").innerHTML);

        formData.append('StoryTitle', $("#StoryTitle").val());
        formData.append('StoryCategory', $("#StoryCategory").val());
        formData.append('File1', files[0]);
        formData.append('Story', $("#Story").val());

        $.ajax({
            type: 'POST',
            url: "/User/UploadFiles",
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (response) {
                if (response == 1) {
                    alert("successfully Profile Updated");
                }
                else {
                    alert("Something Went Wrong..");
                }
            }
        });
    });



    $('#btnUpload').click(function () {
        var formData = new FormData();
        var fileUpload = $("#ImgUpload").get(0);
        var files = fileUpload.files;


        $.ajax({
            type: "POST",
            url: '/User/UploadFiles',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (response) {

            },
            error: function (error) {

            }
        });
    });
    function RemoveAttachement(a, b) {

        $.ajax({
            type: 'POST',
            url: "/User/RemoveAttachement",
            data: { 'AttId': a, 'SId': b },
            cache: false,
            success: function (response) {
                $("#filesListPartialViewDiv").html(response);
            }
        });
    }
</script>

